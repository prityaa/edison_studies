1 .

	You can also edit files in
	"build/tmp/work-shared/qemux86/kernel-source" then compile modified kernel with
	"bitbake -C compile virtual/kernel"

2 .
	My favorite method of doing kernel development in a Yocto project is to create an SDK and build the kernel outside of the Yocto system. This allows more rapid builds because make will only build new changes, whereas a kernel build within Yocto always starts from scratch.

Here are some of my notes on compiling the Linux kernel outside of the Yocto system. The exact paths for this will depend on your exact configuration and software versions. In your case, IMAGE_NAME=fsl-image-multimedia-full

    2.1 Run bitbake -c populate_sdk ${IMAGE_NAME}. You will get a self-extracting and self-installing shell script.

    2.2 Run the shell script (for me it was tmp/deploy/sdk/${NAME}-glibc-i686-${IMAGE_NAME}-cortexa9hf-neon-toolchain-1.0.0.sh), and agree to the default SDK location (for me it was usr/local/oecore-i686).

    2.3 Source the scripts generated by the install script. I use the following helper script to load the SDK so I don't have to keep track of the paths involved. You need to source this in each time you want to use the SDK.

enable_sdk.sh:

#!/bin/bash
if [[ "$0" = "$BASH_SOURCE" ]]
then
    echo "Error: you must source this script."
    exit 1
fi
source /usr/local/oecore-i686/environment-setup-corei7-32-${NAME}-linux
source /usr/local/oecore-i686/environment-setup-cortexa9hf-neon-${NAME}-linux-gnueabi

    2.4 Copy the defconfig file from your Yocto directory to your kernel directory (checked out somewhere outside of the Yocto tree) as .config.

    2.5 Run make oldconfig in your kernel directory so that the Linux kernel build system picks up the existing .config.

    Note: you may have to answer questions about config options that are not set in the .config file.

    Note: running make menuconfig will fail when the SDK is enabled, because the SDK does not have the ncurses libraries set up correctly. For this command, run it in a new terminal that has not enabled the SDK so that it uses the local ncurses-dev packages you have installed.

    2.6 Run make -jN to build the kernel.

    2.7 To run the new kernel, copy the zImage and ${NAME}.dtb files to your NFS/TFTP share or boot device. I use another script to speed up the process.


    update_kernel.sh:

#!/bin/bash
set -x
sudo cp /path-to-linux-source/arch/arm/boot/dts/${NAME}.dtb /srv/nfs/${DEVICE}/boot/
sudo cp /path-to-linux-source/arch/arm/boot/zImage /srv/nfs/${DEVICE}/boot/
set +x

    2.8 You can also point Yocto to your local Linux repo in your .bb file. This is useful for making sure your kernel changes still build correctly within Yocto.

    SRC_URI = "git:///path-to-linux-source/.git/;branch=${KBRANCH};protocol=file"

3
You cannot modify the SRC_URI to simply point to a file on your host machine.  As per yocto project guidelines in most cases SRC_URI should be a git repository that uses one of the supported Git fetcher protocols (i.e. file, git, http, etc.).

You can try the steps bellow:

You first need to make a complete build with the following variable set in local.conf:

 SOURCE_MIRROR_URL ?= "file://source_mirror/sources/"
 INHERIT += "own-mirrors"
 BB_GENERATE_MIRROR_TARBALLS = "1"

After your complete build, copy all files from your download folder to the desired source mirror directory, and modify  local.conf as follows:

SOURCE_MIRROR_URL ?= "file://source_mirror/sources/"

INHERIT += "own-mirrors"

BB_GENERATE_MIRROR_TARBALLS = "1"

BB_NO_NETWORK = "1"     #ensures your build does not use network access#

For additional info you can check: https://wiki.yoctoproject.org/wiki/How_do_I

Also have a look at the description of SRC_URI parameter: http://www.yoctoproject.org/docs/1.6/ref-manual/ref-manual.html#var-SRC_URI

and FILESEXTRAPATHS parameter: http://www.yoctoproject.org/docs/1.6/ref-manual/ref-manual.html#var-FILESEXTRA




ref :
https://stackoverflow.com/questions/47429670/manually-building-a-kernel-source-from-yocto-build
https://e2e.ti.com/support/legacy_forums/omap/f/885/t/331111
https://wiki.yoctoproject.org/wiki/How_do_I

